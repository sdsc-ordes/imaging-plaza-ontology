@prefix schema: <http://schema.org/>.
@prefix sd: <https://w3id.org/okn/o/sd#>.
@prefix bio: <https://bioschemas.org/>.
@prefix spe: <https://openschemas.github.io/spec-container/specifications/>.
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh:   <http://www.w3.org/ns/shacl#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix shsh: <http://www.w3.org/ns/shacl-shacl#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix ex: <https://epfl.ch/example/> .
@prefix md4i: <http://w3id.org/nfdi4ing/metadata4ing#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

<https://epfl.ch/example/ImagingOntologyShapes>
	a owl:Ontology ;
	sh:entailment sh:Rules ;
	sh:declare [
		sh:prefix "ex" ;
		sh:namespace <https://epfl.ch/example/> ;
	] .
ex:fairlevel0Shape a sh:NodeShape    
.
ex:fairlevel1Shape a sh:NodeShape ;
			sh:property schema:CreativeWork-license ,
                  [sh:path schema:license ;
                  sh:minCount 1] ,
                  schema:CreativeWork-citation,
                  [sh:path schema:citation ;
                  sh:minCount 1] ,
                  schema:Thing-name ,
                  [sh:path schema:name ;
                  sh:minCount 1];    
.

ex:fairlevel2Shape a sh:NodeShape ;
			sh:property sd:SoftwareApplication-readme ,
                  [sh:path sd:readme ;
                  sh:minCount 1] ;
      sh:and (ex:fairlevel1Shape)
.

ex:fairlevel3Shape a sh:NodeShape ;
			sh:property schema:SoftwareApplication-softwareRequirements ,
                  [sh:path schema:SoftwareApplication-softwareRequirements ;
                  sh:minCount 1 ] ;
                  # sd:SoftwareApplication-hasInput ,
                  # [sh:path sd:hasInput ;
                  # sh:minCount 1],
                  # sd:SoftwareApplication-hasOutput ,
                  # [sh:path sd:hasOutput ;
                  # sh:minCount 1] ;
      sh:and (ex:fairlevel2Shape) 
.

ex:fairlevel4Shape a sh:NodeShape ;
			sh:property schema:SoftwareApplication-memoryRequirements ,
                  [sh:path schema:memoryRequirements ;
                  sh:minCount 1] ,
                  sd:SoftwareApplication-hasDocumentation ,
                  [sh:path sd:hasDocumentation ;
                  sh:minCount 1] ,
                  sd:SoftwareApplication-hasParameter ,
                  [sh:path sd:hasParameter ;
                  sh:minCount 1] ;
      sh:and (ex:fairlevel3Shape)
.

ex:fairlevel5Shape a sh:NodeShape ;
			sh:property sd:SoftwareApplication-hasExecutableInstructions ,
                  [sh:path sd:hasExecutableInstructions ;
                  sh:minCount 1] ,
                  sd:SoftwareApplication-hasExecutableNotebook ,
                  [sh:path sd:hasExecutableNotebook ;
                  sh:minCount 1];
      sh:and (ex:fairlevel4Shape) 
.



schema:SoftwareSourceCode
a sh:NodeShape, rdfs:Class ;
sh:property schema:SoftwareApplication-applicationCategory ,
              schema:CreativeWork-citation ,
              schema:SoftwareSourceCode-codeRepository ,
              schema:CreativeWork-conditionsOfAccess ,
              schema:CreativeWork-dateCreated ,
              schema:CreativeWork-datePublished ,
              schema:Thing-description ,
              schema:SoftwareApplication-featureList ,
              schema:Thing-image ,
              schema:CreativeWork-isAccessibleForFree ,
              schema:CreativeWork-isBasedOn ,
              schema:CreativeWork-license ,
              schema:CreativeWork-maintainer ,
              schema:SoftwareApplication-memoryRequirements ,
              schema:Thing-name ,
              schema:SoftwareApplication-operatingSystem ,
              schema:CreativeWork-producer ,
              schema:SoftwareSourceCode-programmingLanguage ,
              schema:SoftwareApplication-softwareRequirements ,
              schema:SoftwareApplication-processorRequirements ,
              ex:SoftwareApplication-requiresGPU ,
              schema:SoftwareApplication-softwareVersion ,
              schema:SoftwareApplication-supportingData ,
              schema:CreativeWork-creativeWorkStatus , 
              schema:Thing-url ,
              schema:Thing-identifier ,
              sd:SoftwareApplication-hasAcknowledgements ,
              sd:SoftwareApplication-hasDocumentation ,
              sd:SoftwareApplication-hasExecutableInstructions ,
              sd:SoftwareApplication-hasExecutableNotebook ,
              # sd:SoftwareApplication-hasInput ,
              # sd:SoftwareApplication-hasOutput ,
              sd:SoftwareApplication-hasParameter ,
              sd:SoftwareApplication-readme ,
              sd:SoftwareApplication-hasFunding ,
              sd:SoftwareConfiguration-hasSoftwareImage ,
              ex:SoftwareApplication-imagingModalityShape ,
              ex:fairLevelShape ;
 sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:fairLevel ;
		sh:object "Fair level 0" ;
		sh:condition ex:fairlevel0Shape ];      
  sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:fairLevel ;
		sh:object "Fair level 1" ;
		sh:condition ex:fairlevel1Shape ];           

  sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:fairLevel ;
		sh:object "Fair level 2" ;
		sh:condition ex:fairlevel2Shape ;
	] ;
  sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:fairLevel ;
		sh:object "Fair level 3" ;
		sh:condition ex:fairlevel3Shape ;
	] ;
  sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:fairLevel ;
		sh:object "Fair level 4" ;
		sh:condition ex:fairlevel4Shape
	] ;
  sh:rule [
		a sh:TripleRule ;
		sh:subject sh:this ;
		sh:predicate ex:fairLevel ;
		sh:object "Fair level 5" ;
		sh:condition ex:fairlevel5Shape
	] ;
.

ex:fairLevelShape a sh:PropertyShape ;
  sh:path ex:fairLevel ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
  .

ex:SoftwareApplication-imagingModalityShape 
  a sh:PropertyShape ;
  sh:path ex:imagingModality ;
  sh:in ("MRI" "CAT" "X-Ray" "Any") ;
  .

schema:SoftwareApplication-applicationCategory
  a sh:PropertyShape ;
  sh:path schema:applicationCategory ;
  sh:datatype xsd:string ;
  .
schema:SoftwareApplication-processorRequirements
  a sh:PropertyShape ;
  sh:path schema:processorRequirements ;
  sh:datatype xsd:string ;
  sh:in ("ARM64" "AMD64")
  .

ex:SoftwareApplication-requiresGPU 
  a sh:PropertyShape ;
  sh:path ex:requiresGPU ;
  sh:datatype xsd:boolean .

schema:CreativeWork-citation
  a sh:PropertyShape ;
  sh:path schema:citation ;
  sh:minCount 1 ;
  sh:maxCount 1 ;
  sh:datatype xsd:string ;
  sh:pattern "^http.*" ;
.
schema:SoftwareSourceCode-codeRepository
  a sh:PropertyShape ;
  sh:path schema:codeRepository ;
  sh:pattern "^http.*" ;
  sh:minCount 1 ;
  sh:maxCount 1 ;
.

schema:CreativeWork-conditionsOfAccess
  a sh:PropertyShape ;
  sh:path schema:conditionsOfAccess ;
  sh:datatype xsd:string ;

.        

schema:CreativeWork-dateCreated
  a sh:PropertyShape ;
  sh:path schema:dateCreated ;
  sh:minCount 1 ;
  sh:maxCount 1 ;
  sh:datatype xsd:date ;
  .

schema:CreativeWork-datePublished
  a sh:PropertyShape ;
  sh:path schema:datePublished ;
  sh:datatype xsd:date ;  
  sh:minCount 1 ;
.

schema:Thing-description
  a sh:PropertyShape ;
  sh:path schema:description ;
  sh:datatype xsd:string ;
  sh:maxLength 2000 ;
  sh:minCount 1 ;
.

schema:SoftwareApplication-featureList
  a sh:PropertyShape ;
  sh:path schema:featureList ;
  sh:datatype xsd:string ;
.

schema:Thing-image
  a sh:PropertyShape ;
  sh:path schema:image ;
  sh:class schema:ImageObject ; 
  sh:minCount 1 ;
.

schema:ImagingObject 
  a sh:NodeShape, rdfs:Class ;
  sh:property schema:Thing-url ;
  sh:property schema:CreativeWork-keywords ;
  .


schema:CreativeWork-isAccessibleForFree
  a sh:PropertyShape ;
  sh:path schema:isAccessibleForFree ;
  sh:datatype xsd:boolean ;
.

schema:CreativeWork-isBasedOn
  a sh:PropertyShape ;
  sh:path schema:isBasedOn ;
  sh:pattern "^http.*" ;
  .

schema:CreativeWork-keywords
  a sh:PropertyShape ;
  sh:path schema:keywords ;
  sh:datatype xsd:string ;
  sh:in ("logo" "illustrative image" "before image" "after image") ;
  sh:minCount 1 ;
  sh:maxCount 1 ;
.

schema:CreativeWork-license
  a sh:PropertyShape ;
  sh:path schema:license ;
  sh:pattern ".*spdx\\.org.*" ;
  sh:minCount 1 ;
.

schema:CreativeWork-maintainer
  a sh:PropertyShape ;
  sh:path schema:maintainer ;
  sh:minCount 1 ;
  sh:or (
      [
        sh:class schema:Organization ;
      ]
      [
        sh:class schema:Person ;
      ]
    ) ;
.

schema:Person
a sh:NodeShape ;
  sh:property schema:Person-email ;
  sh:property schema:Person-familyName ;
  sh:property schema:Person-givenName ;
  sh:property md4i:orcidIdShape ;
.

schema:Person-email
  a sh:PropertyShape ;
  sh:path schema:email ;
  sh:datatype xsd:string ;
.

schema:Person-familyName
  a sh:PropertyShape ;
  sh:path schema:familyName ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
  .

schema:Person-givenName
  a sh:PropertyShape ;
  sh:path schema:givenName ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
.

md4i:orcidId
  a sh:PropertyShape ;
  sh:path md4i:orcidId ;
  sh:datatype xsd:string ;
  .

schema:Organization
a sh:NodeShape ;
sh:property schema:Organization-legalName ;
sh:property md4i:hasRorIdShape ;
.

schema:SoftwareApplication-memoryRequirements
  a sh:PropertyShape ;
  sh:path schema:memoryRequirements ;
  sh:datatype xsd:string ;
.

schema:Thing-name
  a sh:PropertyShape ;
  sh:path schema:name ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
  sh:maxLength 60
.

schema:SoftwareApplication-operatingSystem
  a sh:PropertyShape ;
  sh:path schema:operatingSystem ;
  sh:in ("Linux" "Windows" "MacOS" "Other") ;
.

schema:CreativeWork-producer
  a sh:PropertyShape ;
  sh:path schema:producer ;
  sh:minCount 1 ;
  sh:or (
      [
        sh:class schema:Organization ;
      ]
      [
        sh:class schema:Person ;
      ]
    ) ;
.

schema:SoftwareSourceCode-programmingLanguage
  a sh:PropertyShape ;
  sh:path schema:programmingLanguage ;
  sh:class schema:ComputerLanguage ;
.


schema:SoftwareApplication-softwareRequirements
  a sh:PropertyShape ;
  sh:path schema:softwareRequirements ;
  sh:datatype xsd:string ;
  .

schema:SoftwareApplication-softwareVersion
  a sh:PropertyShape ;
  sh:path schema:softwareVersion ;
  sh:datatype xsd:string ;
  sh:pattern "[0-9]+\\.[0-9]+\\.[0-9]+" ;
  sh:minCount 1 ;
.

schema:SoftwareApplication-supportingData
  a sh:PropertyShape ;
  sh:path schema:supportingData ;
  sh:class schema:DataFeed ;
.

schema:Thing-url
  a sh:PropertyShape ;
  sh:path schema:url ;
  sh:pattern "^http.*" ;
.

sd:SoftwareApplication-hasAcknowledgements
    a sh:PropertyShape ;
    sh:path sd:hasAcknowledgements ;
    sh:datatype xsd:string ;
    .

sd:SoftwareApplication-hasDocumentation
    a sh:PropertyShape ;
    sh:path sd:hasDocumentation ;
    sh:pattern "^http.*" ;
    .

sd:SoftwareApplication-hasExecutableInstructions
    a sh:PropertyShape ;
    sh:path sd:hasExecutableInstructions ;
    sh:datatype xsd:string ;
    .                           

sd:SoftwareApplication-hasExecutableNotebook
    a sh:PropertyShape ;
    sh:path sd:hasExecutableNotebook ;
    sh:pattern "^http.*" ;
    .

# sd:SoftwareApplication-hasInput
#     a sh:PropertyShape ;
#     sh:path sd:hasInput ;
#     sh:class sd:DatasetSpecification ;
#     .

# sd:SoftwareApplication-hasOutput
#     a sh:PropertyShape ;
#     sh:path sd:hasOutput ;
#     sh:class sd:DatasetSpecification ;
#     .

sd:SoftwareApplication-hasParameter
    a sh:PropertyShape ;
    sh:path sd:hasParameter ;
    sh:class bio:FormalParameter ;
    .

sd:SoftwareApplication-readme
    a sh:PropertyShape ;
    sh:path sd:readme ;
    sh:pattern "^http.*" ;
  .

schema:CreativeWork-creativeWorkStatus
  a sh:PropertyShape ;
  sh:path schema:creativeWorkStatus ;
  sh:datatype xsd:string ;
  .

schema:DataFeed
a sh:NodeShape ;
sh:property schema:Thing-description ,
              schema:DataDownload-contentURL ,
              schema:Dataset-measurementTechnique ,
              schema:Thing-name ,
              schema:Dataset-variableMeasured ;
              
.   

schema:DataDownload-contentURL
  a sh:PropertyShape ;
  sh:path schema:contentUrl ;
  sh:pattern "^http.*" ;
  sh:minCount 1 ;
.



sd:SoftwareApplication-hasFunding
    a sh:PropertyShape ;
    sh:path sd:hasFunding ;
    sh:class sd:FundingInformation ;
    .
    


# schema:Grant
# a sh:NodeShape ;
#   sh:property schema:Grant-fundedItem ;
#   sh:property schema:Grant-sponsor ;
#   sh:property schema:Thing-identifier ;
#   sh:property sd:FundingInformation-fundingGrant ;

# .

schema:Thing-identifier
  a sh:PropertyShape ;
  sh:path schema:identifier ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
.

# sd:FundingInformation-fundingGrant
#     a sh:PropertyShape ;
#     sh:path sd:fundingGrant ;
#     sh:datatype xsd:string ;
#     sh:minCount 1 ;
#     .

sd:FundingInformation-fundingSource
    a sh:PropertyShape ;
    sh:path sd:fundingSource ;
    sh:class schema:Organization ;
    sh:minCount 1 ;
    .

sd:FundingInformation
    a sh:NodeShape ;
    sh:property schema:Thing-identifier,
                sd:FundingInformation-fundingGrant,
                sd:FundingInformation-fundingSource ;
    .

# sd:DatasetSpecification
#     a sh:NodeShape ;
#     sh:property 
#                 # schema:Thing-description ,
#                 # schema:CreativeWork-encodingFormat,
#                 # schema:Thing-name,
#                 sd:DatasetSpecification-hasDimensionality;
#                 # sd:DatasetSpecification-hasFormat ,
#                 # schema:PropertyValueSpecification-defaultValue, 
#                 # schema:PropertyValueSpecification-valueRequired
#     .

bio:FormalParameter
    a sh:NodeShape ;
    sh:property schema:Thing-description ,
                schema:CreativeWork-encodingFormat,
                schema:Thing-name,
                sd:DatasetSpecification-hasDimensionality,
                sd:DatasetSpecification-hasFormat ,
                schema:PropertyValueSpecification-defaultValue,
                schema:PropertyValueSpecification-valueRequired
    .

schema:CreativeWork-encodingFormat
  a sh:PropertyShape ;
  sh:path schema:encodingFormat ;
  sh:pattern ".*iana.org/assignments/media-types/.*" ;
.

sd:DatasetSpecification-hasDimensionality
    a sh:PropertyShape ;
    sh:path sd:hasDimensionality ;
    sh:datatype xsd:integer ;
    sh:minExclusive 0 ;
    .

sd:DatasetSpecification-hasFormat
    a sh:PropertyShape ;
    sh:path sd:hasFormat ;
    sh:datatype xsd:string ;
    .

schema:PropertyValueSpecification-defaultValue
  a sh:PropertyShape ;
  sh:path schema:defaultValue ;
  sh:or (
      [
        sh:datatype xsd:string ;
      ]
    ) ;
.

schema:PropertyValueSpecification-valueRequired
  a sh:PropertyShape ;
  sh:path schema:valueRequired ;
  sh:datatype xsd:boolean ;
.

sd:SoftwareConfiguration-hasSoftwareImage
    a sh:PropertyShape ;
    sh:path sd:hasSoftwareImage ;
    sh:class sd:SoftwareImage;
    .

sd:SoftwareImage    a sh:NodeShape ;
    sh:property schema:Thing-name ,
                schema:Thing-description ,
                schema:SoftwareApplication-softwareVersion ,
                sd:SoftwareImage-availableInRegistry ;
    .



sd:SoftwareImage-availableInRegistry
    a sh:PropertyShape ;
    sh:pattern "^http.*" ;
    sh:path sd:availableInRegistry ;
    .

schema:Dataset-measurementTechnique
  a sh:PropertyShape ;
  sh:path schema:measurementTechnique ;
  sh:or (
      [
        sh:nodeKind sh:IRI ;
      ]
      [
        sh:datatype xsd:string ;
      ]
    ) ;
.

schema:Dataset-variableMeasured
  a sh:PropertyShape ;
  sh:path schema:variableMeasured ;
  sh:or (
      [
        sh:class schema:PropertyValue ;
      ]
      [
        sh:datatype xsd:string ;
      ]
    ) ;
.

schema:Organization-legalName
  a sh:PropertyShape ;
  sh:path schema:legalName ;
  sh:datatype xsd:string ;
  sh:minCount 1 ;
.

md4i:hasRorId
  a sh:PropertyShape ;
  sh:path md4i:hasRorId ;
  sh:pattern "^http.*" ;
  .

# schema:Grant-fundedItem
#   a sh:PropertyShape ;
#   sh:path schema:fundedItem ;
#   sh:datatype xsd:string ;
# .

# schema:Grant-sponsor
#   a sh:PropertyShape ;
#   sh:path schema:sponsor ;
#   sh:or (
#       [
#         sh:class schema:Organization ;
#       ]
#       [
#         sh:class schema:Person ;
#       ]
#     ) ;
#   sh:minCount 1 ;
# .
